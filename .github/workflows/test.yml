name: Test

on:
  push

jobs:
  windows:
    runs-on: ubuntu-latest
    env:
      GOOS: windows
      GOARCH: amd64
      GOAMD64: v1
      CGO_ENABLED: 0

    steps:
      - name: Set BUILDDATE and BUILDTAG
        run: |
          echo "BUILDDATE=$(date -u +'%Y-%m-%d %H:%M:%S +0000')" >> $GITHUB_ENV
          echo "BUILDTAG=release, by luodan" >> $GITHUB_ENV

      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Get project dependencies
        run: go mod download
        
      - name: Prepare for Build
        run: |
          echo "BINARY=macconv-${GOOS}-${GOARCH}${GOARM}.exe" >> $GITHUB_ENV
          echo "GOOS: ${GOOS}, GOARCH: ${GOARCH}, GOAMD64: ${GOAMD64}, RELEASE_NAME: ${BINARY}"

      - name: Build
        run: |
          mkdir -p dist
          LDFLAGS="-s -w -buildid= \
                   -X 'main.buildDate=${BUILDDATE}' \
                   -X 'main.buildTag=${BUILDTAG}'"
          go build -o dist/${BINARY} -v -trimpath -ldflags "${LDFLAGS}" .

      - name: Create ZIP archive
        run: |
          cd dist
          DGST=${BINARY}.dgst
          for t in md5 sha1 sha256 sha512; do
            openssl dgst -${t} ${BINARY}.exe | sed 's/([^)]*)= \+/\t/' >> ${BINARY}.dgst
          done
          cd ..

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: macconv-${{ github.job }}
          path: dist/*
  linux:
    runs-on: ubuntu-latest
    env:
      GOOS: linux
      GOARCH: amd64
      GOAMD64: v1
      CGO_ENABLED: 0

    steps:
      - name: Set BUILDDATE and BUILDTAG
        run: |
          echo "BUILDDATE=$(date -u +'%Y-%m-%d %H:%M:%S +0000')" >> $GITHUB_ENV
          echo "BUILDTAG=release, by luodan" >> $GITHUB_ENV

      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Get project dependencies
        run: go mod download
        
      - name: Prepare for Build
        run: |
          echo "BINARY=macconv-${GOOS}-${GOARCH}${GOARM}" >> $GITHUB_ENV
          echo "GOOS: ${GOOS}, GOARCH: ${GOARCH}, GOAMD64: ${GOAMD64}, RELEASE_NAME: ${BINARY}"

      - name: Build
        run: |
          mkdir -p dist
          LDFLAGS="-s -w -buildid= \
                   -X 'main.buildDate=${BUILDDATE}' \
                   -X 'main.buildTag=${BUILDTAG}'"
          go build -o dist/${BINARY} -v -trimpath -ldflags "${LDFLAGS}" .

      - name: Create ZIP archive
        run: |
          cd dist
          DGST=${BINARY}.dgst
          for t in md5 sha1 sha256 sha512; do
            openssl dgst -${t} ${BINARY} | sed 's/([^)]*)= \+/\t/' >> ${BINARY}.dgst
          done
          cd ..
          
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: macconv-${{ github.job }}
          path: dist/*
          